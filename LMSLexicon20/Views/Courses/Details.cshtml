@model LMSLexicon20.ViewModels.CourseDetailVM
@*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.7.1/dropzone.css" integrity="sha256-3SE+Qz2RvIa5gOHSNS50MUTTzRAOYREA5+DOmMNFPYk=" crossorigin="anonymous" />*@
<link rel="stylesheet" href="~/css/upload.css" />

<style>
    .course-accordion {
        /*max-width: 500px;*/
        margin: 25px auto;
        box-shadow: 0 0 1px rgba(0,0,0,0.1);
    }

        .course-accordion .card-header {
            border-bottom-color: #EDEFF0;
            /*background: transparent;*/
        }

        .course-accordion .fa-stack {
            font-size: 18px;
        }

    button > span.fa-stack.fa-sm {
        opacity: 0.4;
    }

    .course-module-name, .course-activity-name {
        font-weight: 400;
    }

    .course-activity-deadline-date {
        color: red;
    }
    /*----------------------------------*/

    .warning_to_early, .warning_to_late {
        color: darkgray;
        text-decoration: underline;
        text-decoration-color: red;
    }

    .warning_start_overlap, .warning_end_overlap {
        color: darkgray;
        text-decoration: underline;
        text-decoration-color: gold;
    }
</style>
<head>
    <base href="~/" />
</head>

@{
    ViewData["Title"] = "KURSÖVERSIKT";
    var clsDD = User.IsInRole("Teacher") ? "ddzone" : "";
}

<h2 class="bg-dark shadow-lg rounded-lg font-weight-bold text-light p-4">KURSÖVERSIKT</h2>

<div>
    <div class="@clsDD" data-domain="course" data-id="@Model.Id">
        <div class="fileinput">
            <div class="row" style="margin-left:0; display: flex">
                <div class="col">
                    <i class="fas fa-university"></i>Kurs
                </div>
            </div>
        </div>
    </div>

    <hr />
    @if (User.IsInRole("Teacher"))
    {
        <div style="float:right">
            <a href="@Url.Action("Edit", "Courses", new { id = Model.Id })" class="btn btn-sm btn-outline-secondary a-btn-slide-text">
                <i class="fas fa-edit" aria-hidden="true"></i>
                <span>Ändra</span>
            </a>
        </div>
    }
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StartDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EndDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Teacher)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Teacher != null)
            {
                if (User.IsInRole("Teacher"))
                {
                    <a asp-controller="Users" asp-action="Details" asp-route-id="@Model.Teacher.Id">@($"{Model.Teacher.FirstName} {Model.Teacher.LastName}")</a>
                }
                else
                {
                    <span>@($"{Model.Teacher.FirstName} {Model.Teacher.LastName}")</span>
                }
            }
            else
            {
                <span>Ingen lärare.</span>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Documents)
        </dt>
        <dd class="col-sm-10">

            @{var first = true;}
            @foreach (var itemD in Model.Documents)
            {
                if (!first)
                {
                    <span>&nbsp;|&nbsp;</span>
                }
                else
                {
                    first = false;
                }
                <a target="_new" href="@itemD.Path">@itemD.Name</a>

                @*<a href="@Url.Content(itemD.Path)">@itemD.Name</a>*@
            }
        </dd>
    </dl>
</div>

@if (User.IsInRole("Teacher") && Model != null)
{
    <div class="col" style="display: flex; justify-content: flex-end">
        <div class="@clsDD" data-domain="course" data-id="@Model.Id">
            <div class="fileinput">
                <button type="button" class="btn btn-sm btn-outline-warning">
                    <span class="fas fa-plus-circle" aria-hidden="true"></span>&nbsp;
                    <span>Lägg till dokument&nbsp;<i class="fas fa-file"></i></span>
                </button>
            </div>
        </div>
        @if (Model != null)
        {

            <div style="display: flex; justify-content: flex-end">
                <div id="modulesuccess" class="text-success"></div>
                <a asp-controller="Modules" asp-action="CreateModule" asp-route-id="@Model.Id"
                   data-ajax="true"
                   data-ajax-method="GET"
                   data-ajax-mode="replace"
                   data-ajax-update="#createmodule"
                   class="btn btn-sm btn-outline-primary a-btn-slide-text">
                    <span class="fas fa-plus-circle" aria-hidden="true"></span>&nbsp;
                    <span>Lägg till modul&nbsp;<i class="fas fa-layer-group"></i></span>
                </a>
            </div>

        }
    </div>
    <div id="createmodule"></div>

}

@if (Model != null)
{
    <div id="accordion" class="course-accordion">
        @foreach (var itemM in Model.ModuleDetailVM)
        {
            <div class="card">
                <div class="card-header card-header-module" id="@String.Format($"heading{itemM.Id}")">
                    <div class="mb-0">

                        <div class="container">
                            <div class="row">

                                <div class="col-5 @clsDD" data-domain="module" data-id="@itemM.Id">
                                    <div class="fileinput">
                                        <button class="btn btn-link" data-toggle="collapse" data-target="@String.Format($"#collapse{itemM.Id}")" aria-expanded="@itemM.Expanded" aria-controls="@String.Format($"collapse{itemM.Id}")">
                                            <i class="fas fa-layer-group"></i>
                                            <span class="course-module-name">@Html.DisplayFor(modelItem => itemM.Name)</span>
                                        </button>
                                    </div>
                                </div>

                                <div style="padding-top:10px" class="col-3">
                                    <h6 style="font-weight:400">
                                        @{var cls = ""; var tt = "";}
                                        @if (User.IsInRole("Teacher"))
                                        {
                                            cls = itemM.StartDateOverlap ? "warning_start_overlap" : "";
                                            tt = itemM.StartDateOverlap ? "Modulen startdatum överlappar en annan modul" : "";
                                            cls = itemM.StartDateToEarly ? "warning_to_early" : itemM.StartDateToLate ? "warning_to_late" : cls;
                                            tt = itemM.StartDateToEarly ? "Modulens startdatum ligger innan kursens startdatum" : itemM.StartDateToLate ? "Modulens startdatum ligger efter kursens slutdatumdatum" : tt;
                                        }
                                        <span class="@cls" data-toggle="tooltip" title="@tt">@Html.DisplayFor(modelItem => itemM.StartDate)</span>
                                        <span>&nbsp;-&nbsp;</span>
                                        @if (User.IsInRole("Teacher"))
                                        {
                                            cls = itemM.EndDateOverlap ? "warning_end_overlap" : "";
                                            tt = itemM.EndDateOverlap ? "Modulen slutdatum överlappar en annan modul" : "";
                                            cls = itemM.EndDateToEarly ? "warning_to_early" : itemM.EndDateToLate ? "warning_to_late" : cls;
                                            tt = itemM.EndDateToEarly ? "Modulens slutdatum ligger innan kursens startdatum" : itemM.EndDateToLate ? "Modulens slutdatum ligger efter kursens slutdatumdatum" : tt;
                                        }
                                        <span class="@cls" data-toggle="tooltip" title="@tt">@Html.DisplayFor(modelItem => itemM.EndDate)</span>
                                    </h6>
                                </div>

                                <div class="col-3">
                                    @if (User.IsInRole("Teacher"))
                                    {

                                        <div style="font-size:small;font-weight:400">
                                            <div style="float: right" class="btn-group btn-group-xs" role="group">
                                                <a href="@Url.Action("Delete", "Modules", new { id = itemM.Id })" class="btn btn-sm btn-outline-danger a-btn-slide-text">
                                                    <span class="fas fa-times" aria-hidden="true"></span>
                                                    <span>Ta bort</span>
                                                </a>
                                                <a href="@Url.Action("Edit", "Modules", new { id = itemM.Id })" class="btn btn-sm btn-outline-secondary a-btn-slide-text">
                                                    <i class="fas fa-edit" aria-hidden="true"></i>
                                                    <span>Ändra</span>
                                                </a>
                                            </div>
                                        </div>
                                    }
                                </div>

                                @{ cls = itemM.Expanded ? "fa-caret-down" : "fa-caret-left"; }
                                <div class="col-1">
                                    <button style="padding:0" class="btn btn-link" data-toggle="collapse" data-target="@String.Format($"#collapse{itemM.Id}")" aria-expanded="@itemM.Expanded" aria-controls="@String.Format($"collapse{itemM.Id}")">
                                        <span class="fa-stack fa-sm">
                                            <i class="fas fa-circle fa-stack-2x"></i>
                                            <i class="fas @cls fa-stack-1x fa-inverse"></i>
                                        </span>
                                    </button>
                                </div>
                            </div> @*row*@
                        </div> @*container*@
                    </div>
                </div> @*card-header*@

                @{ cls = itemM.Expanded ? " show" : ""; }
                <div id="@String.Format($"collapse{itemM.Id}")" class="collapse @cls" aria-labelledby="@String.Format($"heading{itemM.Id}")" data-parent="#accordion">
                    <div class="card-body">
                        <dl class="row">
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(modelItem => itemM.Description)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(modelItem => itemM.Description)
                            </dd>

                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(modelItem => itemM.Documents)
                            </dt>
                            <dd class="col-sm-10">

                                @{first = true;}
                                @foreach (var itemD in itemM.Documents)
                                {
                                    if (!first)
                                    {
                                        <span>&nbsp;|&nbsp;</span>
                                    }
                                    else
                                    {
                                        first = false;
                                    }
                                    <a target="_new" href="@itemD.Path">@itemD.Name</a>
                                }
                            </dd>
                        </dl>

                        <div class="row" style="display: flex; justify-content: flex-end; padding-right:20px">
                            @if (User.IsInRole("Teacher"))
                            {
                                <div class="@clsDD" data-domain="module" data-id="@itemM.Id">
                                    <div class="fileinput" style="display: flex; justify-content: flex-end; padding-top: 10px;">
                                        <button type="button" class="btn btn-sm btn-outline-warning">
                                            <span class="fas fa-plus-circle" aria-hidden="true"></span>&nbsp;
                                            <span>Lägg till dokument&nbsp;<i class="fas fa-file"></i></span>
                                        </button>
                                    </div>
                                </div>
                            }
                            &nbsp;
                            @if (User.IsInRole("Teacher"))
                            {
                                <div style="display: flex; justify-content: flex-end; padding-top: 10px;">
                                    <a href="@Url.Action("Create", "Activities", new { id = itemM.Id })" class="btn btn-sm btn-outline-primary a-btn-slide-text">
                                        <span class="fas fa-plus-circle" aria-hidden="true"></span>&nbsp;
                                        <span>Lägg till aktivitet&nbsp;<i class="fas fa-tasks"></i></span>
                                    </a>
                                </div>
                            }
                        </div>
                        <br />
                        @foreach (var itemA in itemM.ActivityDetailVM)
                        {
                            <div id="@String.Format($"accordion{itemM.Id}")">
                                <div class="card">
                                    <div class="card-header" id="@String.Format($"heading{itemM.Id}_{itemA.Id}")">
                                        <div class="mb-0">
                                            <div class="container">
                                                <div class="row">

                                                    <div class="col-5 @clsDD" data-domain="activity" data-id="@itemA.Id">
                                                        <div class="fileinput">
                                                            <button class="btn btn-link" data-toggle="collapse" data-target="@String.Format($"#collapse{itemM.Id}_{itemA.Id}")" aria-expanded="@itemA.Expanded" aria-controls="@String.Format($"collapse{itemM.Id}_{itemA.Id}")">
                                                                <i class="fas fa-tasks"></i>
                                                                <span class="course-activity-name">@Html.DisplayFor(modelItem => itemA.Name)</span>
                                                            </button>
                                                        </div>
                                                    </div>

                                                    <div style="padding-top:10px" class="col-3">
                                                        <h6 style="font-weight:400">
                                                            @if (User.IsInRole("Teacher"))
                                                            {
                                                                cls = itemA.StartDateOverlap ? "warning_start_overlap" : "";
                                                                tt = itemA.StartDateOverlap ? "Aktivitetens startdatum överlappar en annan aktivitet" : "";
                                                                cls = itemA.StartDateToEarly ? "warning_to_early" : itemA.StartDateToLate ? "warning_to_late" : cls;
                                                                tt = itemA.StartDateToEarly ? "Aktivitetens startdatum ligger innan modulens startdatum" : itemA.StartDateToLate ? "Aktivitetens startdatum ligger efter modulens slutdatumdatum" : tt;
                                                            }
                                                            <span class="@cls" data-toggle="tooltip" title="@tt">@Html.DisplayFor(modelItem => itemA.StartDate)</span>
                                                            <span>&nbsp;-&nbsp;</span>
                                                            @if (User.IsInRole("Teacher"))
                                                            {
                                                                cls = itemA.EndDateOverlap ? "warning_end_overlap" : "";
                                                                tt = itemA.EndDateOverlap ? "Aktivitetens slutdatum överlappar en annan aktivitet" : "";
                                                                cls = itemA.EndDateToEarly ? "warning_to_early" : itemA.EndDateToLate ? "warning_to_late" : cls;
                                                                tt = itemA.EndDateToEarly ? "Aktivitetens slutdatum ligger innan modulens startdatum" : itemA.EndDateToLate ? "Aktivitetens slutdatum ligger efter modulens slutdatumdatum" : tt;
                                                            }
                                                            <span class="@cls" data-toggle="tooltip" title="@tt">@Html.DisplayFor(modelItem => itemA.EndDate)</span>
                                                        </h6>
                                                    </div>

                                                    <div class="col-3">
                                                        @if (User.IsInRole("Teacher"))
                                                        {
                                                            <div style="font-size:small;font-weight:400">
                                                                <div style="float: right" class="btn-group btn-group-xs" role="group">
                                                                    <a href="@Url.Action("Delete", "Activities", new { id = itemA.Id })" class="btn btn-sm btn-outline-danger a-btn-slide-text">
                                                                        <span class="fas fa-times" aria-hidden="true"></span>
                                                                        <span>Ta bort</span>
                                                                    </a>
                                                                    <a href="@Url.Action("Edit", "Activities", new { id = itemA.Id })" class="btn btn-sm btn-outline-secondary a-btn-slide-text">
                                                                        <i class="fas fa-edit" aria-hidden="true"></i>
                                                                        <span>Ändra</span>
                                                                    </a>
                                                                </div>
                                                            </div>
                                                        }
                                                    </div>

                                                    @{ cls = itemA.Expanded ? "fa-caret-down" : "fa-caret-left"; }
                                                    <div class="col-1">
                                                        <button style="padding:0" class="btn btn-link" data-toggle="collapse" data-target="@String.Format($"#collapse{itemM.Id}_{itemA.Id}")" aria-expanded="@itemA.Expanded" aria-controls="@String.Format($"collapse{itemM.Id}_{itemA.Id}")">
                                                            <span class="fa-stack fa-sm">
                                                                <i class="fas fa-circle fa-stack-2x"></i>
                                                                <i class="fas  @cls fa-stack-1x fa-inverse"></i>
                                                            </span>
                                                        </button>
                                                    </div>
                                                </div> @*row*@
                                            </div> @*container*@
                                        </div>
                                    </div> @*card-header*@

                                    @{ cls = itemA.Expanded ? " show" : ""; }
                                    <div id="@String.Format($"collapse{itemM.Id}_{itemA.Id}")" class="collapse @cls" aria-labelledby="@String.Format($"heading{itemM.Id}_{itemA.Id}")" data-parent="@String.Format($"#accordion{itemM.Id}")">
                                        <div class="card-body">
                                            @*<span>@Html.DisplayFor(modelItem => itemA.Description)</span>*@
                                            <dl class="row">
                                                <dt class="col-sm-2">
                                                    @Html.DisplayNameFor(modelItem => itemA.Description)
                                                </dt>
                                                <dd class="col-sm-10">
                                                    @Html.DisplayFor(modelItem => itemA.Description)
                                                </dd>

                                                <dt class="col-sm-2">
                                                    @Html.DisplayNameFor(modelItem => itemA.Documents)
                                                </dt>
                                                <dd class="col-sm-10">

                                                    @{first = true;}
                                                    @foreach (var itemD in itemA.Documents)
                                                    {
                                                        if (!first)
                                                        {
                                                            <span>&nbsp;|&nbsp;</span>
                                                        }
                                                        else
                                                        {
                                                            first = false;
                                                        }
                                                        <a target="_new" href="@itemD.Path">@itemD.Name</a>
                                                    }
                                                </dd>
                                            </dl>
                                            <div class="@clsDD" data-domain="activity" data-id="@itemA.Id">
                                                <div class="fileinput" style="display: flex; justify-content: flex-end; padding-top: 10px;">
                                                    <button type="button" class="btn btn-sm btn-outline-warning">
                                                        <span class="fas fa-plus-circle" aria-hidden="true"></span>&nbsp;
                                                        <span>Lägg till dokument&nbsp;<i class="fas fa-file"></i></span>
                                                    </button>
                                                </div>
                                            </div>
                                            <br /><br />
                                            <span style="font-weight:bold">@Html.DisplayFor(modelItem => itemA.ActivityTypeWM.Name)</span>

                                            @if (itemA.ActivityTypeWM.RequireDocument)
                                            {
                                                <div class="ddzone" data-domain="assignment" data-id="@itemA.Id"> @*restrict to teacher class="ddzone@clsDD"*@
                                                    <div class="fileinput">
                                                        <button type="button" class="btn btn-sm btn-outline-warning">
                                                            <span class="fas fa-file-archive"></span>
                                                            Dokument <span class="badge badge-light text-small " style="vertical-align: top">@itemA.NrOfAssignments</span>
                                                        </button>
                                                    </div>
                                                </div>
                                            }
                                            @if (itemA.HasDeadline)
                                            {
                                                <span class="course-activity-deadline-date">@Html.DisplayFor(modelItem => itemA.EndDate)</span>
                                            }

                                            <br />
                                        </div>
                                    </div>
                                </div> @*card*@
                            </div>
                        }
                    </div>
                </div>
            </div> @*card*@
        }
    </div>
}

<br />
<hr />
<h4><i class="fas fa-user-friends"></i>Studenter</h4>
@if (User.IsInRole("Teacher") && Model != null)
{
    <div style="display: flex; justify-content: flex-end">
        <a href="@Url.Action("CreateUser", "Users", new { id = Model.Id })" class="btn btn-sm btn-outline-primary a-btn-slide-text">
            <span class="fas fa-plus-circle" aria-hidden="true"></span>&nbsp;
            <span>Lägg till Student&nbsp;<i class="fas fa-user-friends"></i></span>
        </a>
    </div>
}
<br />

@await Component.InvokeAsync("StudentList", new { IdCourse = Model?.Id ?? -1 })

<div>
    @if (User.IsInRole("Teacher") && Model != null)
    {
        <a asp-action="Index">Tillbaka</a>
    }
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.7.1/dropzone.min.js" integrity="sha256-fegGeSK7Ez4lvniVEiz1nKMx9pYtlLwPNRPf6uc8d+8=" crossorigin="anonymous"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>var url_action='@Url.Action("PostDoc", "Uploads")';</script>
<script src="~/js/upload.js"></script>

<script>
    $(function () {
        $("#accordion").on("hide.bs.collapse show.bs.collapse", e => {
            $(e.target)
                .prev()
                .find("i:last-child") //
                .toggleClass("fa-caret-left fa-caret-down");

            $(e.target)
                .prev()
                .find("svg:last-child") //.fa-inverse
                .toggleClass("fa-caret-left fa-caret-down");
        });

        $("#accordion").on("shown.bs.collapse", e => {
            $("html, body").animate(
                {
                    scrollTop: $(e.target)
                        .prev()
                        .offset().top
                },
                400
            );
        });


    });
</script>